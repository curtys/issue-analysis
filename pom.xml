<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ch.unibe.scg.curtys</groupId>
	<artifactId>issue-analysis</artifactId>
	<version>1.0-SNAPSHOT</version>

	<properties>
		<nd4j.backend>nd4j-native-platform</nd4j.backend>
		<nd4j.version>0.8.0</nd4j.version>
		<dl4j.version>0.8.0</dl4j.version>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<repositories>
		<repository>
			<id>issue-vectorization-mvn-repo</id>
			<url>https://raw.github.com/curtys/issue-vectorization/mvn-repo/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
		<repository>
			<id>bug-report-quality-mvn-repo</id>
			<url>https://raw.github.com/curtys/bug-report-quality/mvn-repo/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<!-- Modules for issue analysis -->
		<dependency>
			<groupId>ch.unibe.scg.curtys</groupId>
			<artifactId>issue-vectorization</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>ch.unibe.scg.curtys</groupId>
			<artifactId>bug-report-quality</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>

		<!-- ND4J backend. You need one in every DL4J project. Normally define artifactId as either "nd4j-native-platform" or "nd4j-cuda-7.5-platform" -->
		<dependency>
			<groupId>org.nd4j</groupId>
			<artifactId>${nd4j.backend}</artifactId>
			<version>${nd4j.version}</version>
		</dependency>

		<!-- Core DL4J functionality -->
		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>deeplearning4j-core</artifactId>
			<version>${dl4j.version}</version>
		</dependency>

		<!-- Tests -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.0.0-M4</version>
		</dependency>
	</dependencies>

	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.12</version>
				<configuration>
					<message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
					<noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
					<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
					<branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
					<includes><include>**/*</include></includes>
					<repositoryName>${artifactId}</repositoryName>      <!-- github repo name -->
					<repositoryOwner>curtys</repositoryOwner>    <!-- github username  -->
				</configuration>
				<executions>
					<!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>